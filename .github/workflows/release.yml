name: Create Release

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  check_release:
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request.merged == true && (
      contains(github.event.pull_request.head.ref, 'hotfix/v') ||
      contains(github.event.pull_request.head.ref, 'release/v')
      )
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Extract version from branch name
        id: get_version
        run: |
          BRANCH="${{ github.event.pull_request.head.ref }}"
          VERSION="${BRANCH#*/v}"  # Remove prefix up to v
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  build-and-release:
    needs: check_release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - name: Install UV
        uses: astral-sh/setup-uv@v2
        with:
          version: "latest"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Python dependencies
        run: uv sync --group dev

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Copy frontend to package
        run: |
          mkdir -p radio_telemetry_tracker_drone_gcs/frontend_dist
          cp -r frontend/dist/* radio_telemetry_tracker_drone_gcs/frontend_dist/

      - name: Build wheel
        run: uv build

      - name: Run tests
        run: uv run pytest

      - name: Lint code
        run: uv run ruff check .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.check_release.outputs.version }}
          name: Release v${{ needs.check_release.outputs.version }}
          files: |
            dist/*.whl
            dist/*.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 