name: Create Release

on:
  pull_request:
    types: [closed]
    branches:
      - main
    
jobs:
  check_release:
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request.merged == true && (
      contains(github.event.pull_request.head.ref, 'hotfix/v') ||
      contains(github.event.pull_request.head.ref, 'release/v')
      )
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Extract version from branch name
        id: get_version
        run: |
          BRANCH=${{ github.event.pull_request.head.ref }}
          VERSION=${BRANCH#*/v}  # Remove prefix up to v
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  build-and-release:
    needs: check_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Build frontend
        working-directory: frontend
        run: |
          npm install
          npm run build

      - name: Build wheel
        run: poetry build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.check_release.outputs.version }}
          name: Release v${{ needs.check_release.outputs.version }}
          files: |
            dist/*.whl
            dist/*.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 